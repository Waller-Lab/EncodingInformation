Search.setIndex({"alltitles": {"Contents:": [[0, null]], "Imaging System Design with Information Estimation": [[0, null]], "Module contents": [[1, "module-encoding_information"], [2, "module-encoding_information.datasets"], [3, "module-encoding_information.models"]], "Parameters": [[1, "parameters"], [3, "parameters"], [3, "id1"], [3, "id2"], [3, "id4"], [3, "id5"], [3, "id7"], [3, "id8"], [3, "id10"]], "Parameters:": [[1, "id1"]], "Returns": [[1, "returns"], [3, "returns"], [3, "id3"], [3, "id6"], [3, "id9"]], "Returns:": [[1, "id2"]], "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"]], "Subpackages": [[1, "subpackages"]], "encoding_information": [[4, null]], "encoding_information package": [[1, null]], "encoding_information.datasets package": [[2, null]], "encoding_information.datasets.bsccm_utils module": [[2, "module-encoding_information.datasets.bsccm_utils"]], "encoding_information.datasets.cfa_dataset module": [[2, "module-encoding_information.datasets.cfa_dataset"]], "encoding_information.datasets.dataset_base_class module": [[2, "module-encoding_information.datasets.dataset_base_class"]], "encoding_information.datasets.hml_dataset module": [[2, "module-encoding_information.datasets.hml_dataset"]], "encoding_information.datasets.mnist_dataset module": [[2, "module-encoding_information.datasets.mnist_dataset"]], "encoding_information.error_bars module": [[1, "module-encoding_information.error_bars"]], "encoding_information.gpu_utils module": [[1, "module-encoding_information.gpu_utils"]], "encoding_information.image_utils module": [[1, "module-encoding_information.image_utils"]], "encoding_information.information_estimation module": [[1, "module-encoding_information.information_estimation"]], "encoding_information.models package": [[3, null]], "encoding_information.models.conditional_entropy_models module": [[3, "module-encoding_information.models.conditional_entropy_models"]], "encoding_information.models.gaussian_process module": [[3, "module-encoding_information.models.gaussian_process"]], "encoding_information.models.model_base_class module": [[3, "module-encoding_information.models.model_base_class"]], "encoding_information.models.pixel_cnn module": [[3, "module-encoding_information.models.pixel_cnn"]], "encoding_information.plot_utils module": [[1, "module-encoding_information.plot_utils"]]}, "docnames": ["index", "source/encoding_information", "source/encoding_information.datasets", "source/encoding_information.models", "source/modules"], "envversion": {"sphinx": 63, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["index.rst", "source/encoding_information.rst", "source/encoding_information.datasets.rst", "source/encoding_information.models.rst", "source/modules.rst"], "indexentries": {"add() (encoding_information.plot_utils.overlayedhistograms method)": [[1, "encoding_information.plot_utils.OverlayedHistograms.add", false]], "add_multiple_colorbars() (in module encoding_information.plot_utils)": [[1, "encoding_information.plot_utils.add_multiple_colorbars", false]], "add_noise() (in module encoding_information.image_utils)": [[1, "encoding_information.image_utils.add_noise", false]], "add_shot_noise_to_experimenal_data() (in module encoding_information.datasets.bsccm_utils)": [[2, "encoding_information.datasets.bsccm_utils.add_shot_noise_to_experimenal_data", false]], "analytic_multivariate_gaussian_entropy() (in module encoding_information.information_estimation)": [[1, "encoding_information.information_estimation.analytic_multivariate_gaussian_entropy", false]], "analyticgaussiannoisemodel (class in encoding_information.models.conditional_entropy_models)": [[3, "encoding_information.models.conditional_entropy_models.AnalyticGaussianNoiseModel", false]], "average_diagonals_to_make_doubly_toeplitz() (in module encoding_information.models.gaussian_process)": [[3, "encoding_information.models.gaussian_process.average_diagonals_to_make_doubly_toeplitz", false]], "bsccmdataset (class in encoding_information.datasets.bsccm_utils)": [[2, "encoding_information.datasets.bsccm_utils.BSCCMDataset", false]], "c_out (encoding_information.models.pixel_cnn.horizontalstackconvolution attribute)": [[3, "encoding_information.models.pixel_cnn.HorizontalStackConvolution.c_out", false]], "c_out (encoding_information.models.pixel_cnn.maskedconvolution attribute)": [[3, "encoding_information.models.pixel_cnn.MaskedConvolution.c_out", false]], "c_out (encoding_information.models.pixel_cnn.verticalstackconvolution attribute)": [[3, "encoding_information.models.pixel_cnn.VerticalStackConvolution.c_out", false]], "colorfilterarraydataset (class in encoding_information.datasets.cfa_dataset)": [[2, "encoding_information.datasets.cfa_dataset.ColorFilterArrayDataset", false]], "compute_analytic_entropy() (encoding_information.models.gaussian_process.stationarygaussianprocess method)": [[3, "encoding_information.models.gaussian_process.StationaryGaussianProcess.compute_analytic_entropy", false]], "compute_negative_log_likelihood() (encoding_information.models.gaussian_process.fullgaussianprocess method)": [[3, "encoding_information.models.gaussian_process.FullGaussianProcess.compute_negative_log_likelihood", false]], "compute_negative_log_likelihood() (encoding_information.models.gaussian_process.stationarygaussianprocess method)": [[3, "encoding_information.models.gaussian_process.StationaryGaussianProcess.compute_negative_log_likelihood", false]], "compute_negative_log_likelihood() (encoding_information.models.model_base_class.measurementmodel method)": [[3, "encoding_information.models.model_base_class.MeasurementModel.compute_negative_log_likelihood", false]], "compute_negative_log_likelihood() (encoding_information.models.pixel_cnn.pixelcnn method)": [[3, "encoding_information.models.pixel_cnn.PixelCNN.compute_negative_log_likelihood", false]], "compute_photon_rescale_fraction() (in module encoding_information.datasets.bsccm_utils)": [[2, "encoding_information.datasets.bsccm_utils.compute_photon_rescale_fraction", false]], "condition_vector_size (encoding_information.models.pixel_cnn.gatedmaskedconv attribute)": [[3, "encoding_information.models.pixel_cnn.GatedMaskedConv.condition_vector_size", false]], "d (encoding_information.models.model_base_class.measurementtype attribute)": [[3, "encoding_information.models.model_base_class.MeasurementType.D", false]], "dilation (encoding_information.models.pixel_cnn.gatedmaskedconv attribute)": [[3, "encoding_information.models.pixel_cnn.GatedMaskedConv.dilation", false]], "dilation (encoding_information.models.pixel_cnn.horizontalstackconvolution attribute)": [[3, "encoding_information.models.pixel_cnn.HorizontalStackConvolution.dilation", false]], "dilation (encoding_information.models.pixel_cnn.maskedconvolution attribute)": [[3, "encoding_information.models.pixel_cnn.MaskedConvolution.dilation", false]], "dilation (encoding_information.models.pixel_cnn.verticalstackconvolution attribute)": [[3, "encoding_information.models.pixel_cnn.VerticalStackConvolution.dilation", false]], "encoding_information": [[1, "module-encoding_information", false]], "encoding_information.datasets": [[2, "module-encoding_information.datasets", false]], "encoding_information.datasets.bsccm_utils": [[2, "module-encoding_information.datasets.bsccm_utils", false]], "encoding_information.datasets.cfa_dataset": [[2, "module-encoding_information.datasets.cfa_dataset", false]], "encoding_information.datasets.dataset_base_class": [[2, "module-encoding_information.datasets.dataset_base_class", false]], "encoding_information.datasets.hml_dataset": [[2, "module-encoding_information.datasets.hml_dataset", false]], "encoding_information.datasets.mnist_dataset": [[2, "module-encoding_information.datasets.mnist_dataset", false]], "encoding_information.error_bars": [[1, "module-encoding_information.error_bars", false]], "encoding_information.gpu_utils": [[1, "module-encoding_information.gpu_utils", false]], "encoding_information.image_utils": [[1, "module-encoding_information.image_utils", false]], "encoding_information.information_estimation": [[1, "module-encoding_information.information_estimation", false]], "encoding_information.models": [[3, "module-encoding_information.models", false]], "encoding_information.models.conditional_entropy_models": [[3, "module-encoding_information.models.conditional_entropy_models", false]], "encoding_information.models.gaussian_process": [[3, "module-encoding_information.models.gaussian_process", false]], "encoding_information.models.model_base_class": [[3, "module-encoding_information.models.model_base_class", false]], "encoding_information.models.pixel_cnn": [[3, "module-encoding_information.models.pixel_cnn", false]], "encoding_information.plot_utils": [[1, "module-encoding_information.plot_utils", false]], "estimate_conditional_entropy() (encoding_information.models.conditional_entropy_models.analyticgaussiannoisemodel method)": [[3, "encoding_information.models.conditional_entropy_models.AnalyticGaussianNoiseModel.estimate_conditional_entropy", false]], "estimate_conditional_entropy() (encoding_information.models.conditional_entropy_models.poissonnoisemodel method)": [[3, "encoding_information.models.conditional_entropy_models.PoissonNoiseModel.estimate_conditional_entropy", false]], "estimate_conditional_entropy() (encoding_information.models.model_base_class.measurementnoisemodel method)": [[3, "encoding_information.models.model_base_class.MeasurementNoiseModel.estimate_conditional_entropy", false]], "estimate_conditional_entropy() (in module encoding_information.information_estimation)": [[1, "encoding_information.information_estimation.estimate_conditional_entropy", false]], "estimate_full_cov_mat() (in module encoding_information.models.gaussian_process)": [[3, "encoding_information.models.gaussian_process.estimate_full_cov_mat", false]], "estimate_information() (in module encoding_information.information_estimation)": [[1, "encoding_information.information_estimation.estimate_information", false]], "estimate_mutual_information() (in module encoding_information.information_estimation)": [[1, "encoding_information.information_estimation.estimate_mutual_information", false]], "estimate_task_specific_mutual_information() (in module encoding_information.information_estimation)": [[1, "encoding_information.information_estimation.estimate_task_specific_mutual_information", false]], "extract_patches() (in module encoding_information.image_utils)": [[1, "encoding_information.image_utils.extract_patches", false]], "fit() (encoding_information.models.gaussian_process.fullgaussianprocess method)": [[3, "encoding_information.models.gaussian_process.FullGaussianProcess.fit", false]], "fit() (encoding_information.models.gaussian_process.stationarygaussianprocess method)": [[3, "encoding_information.models.gaussian_process.StationaryGaussianProcess.fit", false]], "fit() (encoding_information.models.model_base_class.measurementmodel method)": [[3, "encoding_information.models.model_base_class.MeasurementModel.fit", false]], "fit() (encoding_information.models.pixel_cnn.pixelcnn method)": [[3, "encoding_information.models.pixel_cnn.PixelCNN.fit", false]], "fullgaussianprocess (class in encoding_information.models.gaussian_process)": [[3, "encoding_information.models.gaussian_process.FullGaussianProcess", false]], "gatedmaskedconv (class in encoding_information.models.pixel_cnn)": [[3, "encoding_information.models.pixel_cnn.GatedMaskedConv", false]], "gaussian_likelihood() (in module encoding_information.models.gaussian_process)": [[3, "encoding_information.models.gaussian_process.gaussian_likelihood", false]], "generate_bins() (encoding_information.plot_utils.overlayedhistograms method)": [[1, "encoding_information.plot_utils.OverlayedHistograms.generate_bins", false]], "generate_multivariate_gaussian_samples() (in module encoding_information.models.gaussian_process)": [[3, "encoding_information.models.gaussian_process.generate_multivariate_gaussian_samples", false]], "generate_samples() (encoding_information.models.gaussian_process.fullgaussianprocess method)": [[3, "encoding_information.models.gaussian_process.FullGaussianProcess.generate_samples", false]], "generate_samples() (encoding_information.models.gaussian_process.stationarygaussianprocess method)": [[3, "encoding_information.models.gaussian_process.StationaryGaussianProcess.generate_samples", false]], "generate_samples() (encoding_information.models.model_base_class.measurementmodel method)": [[3, "encoding_information.models.model_base_class.MeasurementModel.generate_samples", false]], "generate_samples() (encoding_information.models.pixel_cnn.pixelcnn method)": [[3, "encoding_information.models.pixel_cnn.PixelCNN.generate_samples", false]], "generate_stationary_gaussian_process_samples() (in module encoding_information.models.gaussian_process)": [[3, "encoding_information.models.gaussian_process.generate_stationary_gaussian_process_samples", false]], "generate_synthetic_multi_led_images() (in module encoding_information.datasets.bsccm_utils)": [[2, "encoding_information.datasets.bsccm_utils.generate_synthetic_multi_led_images", false]], "get_bsccm_image() (in module encoding_information.datasets.bsccm_utils)": [[2, "encoding_information.datasets.bsccm_utils.get_bsccm_image", false]], "get_bsccm_image_marker_generator() (in module encoding_information.datasets.bsccm_utils)": [[2, "encoding_information.datasets.bsccm_utils.get_bsccm_image_marker_generator", false]], "get_cov_mat() (encoding_information.models.gaussian_process.stationarygaussianprocess method)": [[3, "encoding_information.models.gaussian_process.StationaryGaussianProcess.get_cov_mat", false]], "get_display_channel_names() (in module encoding_information.datasets.bsccm_utils)": [[2, "encoding_information.datasets.bsccm_utils.get_display_channel_names", false]], "get_hist_counts() (encoding_information.plot_utils.overlayedhistograms method)": [[1, "encoding_information.plot_utils.OverlayedHistograms.get_hist_counts", false]], "get_mean_vec() (encoding_information.models.gaussian_process.stationarygaussianprocess method)": [[3, "encoding_information.models.gaussian_process.StationaryGaussianProcess.get_mean_vec", false]], "get_measurements() (encoding_information.datasets.bsccm_utils.bsccmdataset method)": [[2, "encoding_information.datasets.bsccm_utils.BSCCMDataset.get_measurements", false]], "get_measurements() (encoding_information.datasets.cfa_dataset.colorfilterarraydataset method)": [[2, "encoding_information.datasets.cfa_dataset.ColorFilterArrayDataset.get_measurements", false]], "get_measurements() (encoding_information.datasets.dataset_base_class.measurementdatasetbase method)": [[2, "encoding_information.datasets.dataset_base_class.MeasurementDatasetBase.get_measurements", false]], "get_measurements() (encoding_information.datasets.hml_dataset.hyperspectralmetalensdataset method)": [[2, "encoding_information.datasets.hml_dataset.HyperspectralMetalensDataset.get_measurements", false]], "get_measurements() (encoding_information.datasets.mnist_dataset.mnistdataset method)": [[2, "encoding_information.datasets.mnist_dataset.MNISTDataset.get_measurements", false]], "get_shape() (encoding_information.datasets.bsccm_utils.bsccmdataset method)": [[2, "encoding_information.datasets.bsccm_utils.BSCCMDataset.get_shape", false]], "get_shape() (encoding_information.datasets.cfa_dataset.colorfilterarraydataset method)": [[2, "encoding_information.datasets.cfa_dataset.ColorFilterArrayDataset.get_shape", false]], "get_shape() (encoding_information.datasets.dataset_base_class.measurementdatasetbase method)": [[2, "encoding_information.datasets.dataset_base_class.MeasurementDatasetBase.get_shape", false]], "get_shape() (encoding_information.datasets.hml_dataset.hyperspectralmetalensdataset method)": [[2, "encoding_information.datasets.hml_dataset.HyperspectralMetalensDataset.get_shape", false]], "get_shape() (encoding_information.datasets.mnist_dataset.mnistdataset method)": [[2, "encoding_information.datasets.mnist_dataset.MNISTDataset.get_shape", false]], "get_targets_and_display_range() (in module encoding_information.datasets.bsccm_utils)": [[2, "encoding_information.datasets.bsccm_utils.get_targets_and_display_range", false]], "horizontalstackconvolution (class in encoding_information.models.pixel_cnn)": [[3, "encoding_information.models.pixel_cnn.HorizontalStackConvolution", false]], "hw (encoding_information.models.model_base_class.measurementtype attribute)": [[3, "encoding_information.models.model_base_class.MeasurementType.HW", false]], "hwc (encoding_information.models.model_base_class.measurementtype attribute)": [[3, "encoding_information.models.model_base_class.MeasurementType.HWC", false]], "hyperspectralmetalensdataset (class in encoding_information.datasets.hml_dataset)": [[2, "encoding_information.datasets.hml_dataset.HyperspectralMetalensDataset", false]], "id (encoding_information.models.pixel_cnn.gatedmaskedconv attribute)": [[3, "encoding_information.models.pixel_cnn.GatedMaskedConv.id", false]], "kernel_size (encoding_information.models.pixel_cnn.horizontalstackconvolution attribute)": [[3, "encoding_information.models.pixel_cnn.HorizontalStackConvolution.kernel_size", false]], "kernel_size (encoding_information.models.pixel_cnn.verticalstackconvolution attribute)": [[3, "encoding_information.models.pixel_cnn.VerticalStackConvolution.kernel_size", false]], "limit_gpu_memory_growth() (in module encoding_information.gpu_utils)": [[1, "encoding_information.gpu_utils.limit_gpu_memory_growth", false]], "load_bsccm_images() (in module encoding_information.datasets.bsccm_utils)": [[2, "encoding_information.datasets.bsccm_utils.load_bsccm_images", false]], "load_data_from_config() (in module encoding_information.datasets.bsccm_utils)": [[2, "encoding_information.datasets.bsccm_utils.load_data_from_config", false]], "load_image_with_synthetic_shot_noise() (in module encoding_information.datasets.bsccm_utils)": [[2, "encoding_information.datasets.bsccm_utils.load_image_with_synthetic_shot_noise", false]], "make_dataset_generators() (in module encoding_information.models.model_base_class)": [[3, "encoding_information.models.model_base_class.make_dataset_generators", false]], "make_positive_definite() (in module encoding_information.models.gaussian_process)": [[3, "encoding_information.models.gaussian_process.make_positive_definite", false]], "mask (encoding_information.models.pixel_cnn.maskedconvolution attribute)": [[3, "encoding_information.models.pixel_cnn.MaskedConvolution.mask", false]], "mask_center (encoding_information.models.pixel_cnn.horizontalstackconvolution attribute)": [[3, "encoding_information.models.pixel_cnn.HorizontalStackConvolution.mask_center", false]], "mask_center (encoding_information.models.pixel_cnn.verticalstackconvolution attribute)": [[3, "encoding_information.models.pixel_cnn.VerticalStackConvolution.mask_center", false]], "maskedconvolution (class in encoding_information.models.pixel_cnn)": [[3, "encoding_information.models.pixel_cnn.MaskedConvolution", false]], "match_to_generator_data() (in module encoding_information.models.gaussian_process)": [[3, "encoding_information.models.gaussian_process.match_to_generator_data", false]], "mean (encoding_information.models.pixel_cnn.preprocesslayer attribute)": [[3, "encoding_information.models.pixel_cnn.PreprocessLayer.mean", false]], "measurementdatasetbase (class in encoding_information.datasets.dataset_base_class)": [[2, "encoding_information.datasets.dataset_base_class.MeasurementDatasetBase", false]], "measurementmodel (class in encoding_information.models.model_base_class)": [[3, "encoding_information.models.model_base_class.MeasurementModel", false]], "measurementnoisemodel (class in encoding_information.models.model_base_class)": [[3, "encoding_information.models.model_base_class.MeasurementNoiseModel", false]], "measurementtype (class in encoding_information.models.model_base_class)": [[3, "encoding_information.models.model_base_class.MeasurementType", false]], "mnistdataset (class in encoding_information.datasets.mnist_dataset)": [[2, "encoding_information.datasets.mnist_dataset.MNISTDataset", false]], "module": [[1, "module-encoding_information", false], [1, "module-encoding_information.error_bars", false], [1, "module-encoding_information.gpu_utils", false], [1, "module-encoding_information.image_utils", false], [1, "module-encoding_information.information_estimation", false], [1, "module-encoding_information.plot_utils", false], [2, "module-encoding_information.datasets", false], [2, "module-encoding_information.datasets.bsccm_utils", false], [2, "module-encoding_information.datasets.cfa_dataset", false], [2, "module-encoding_information.datasets.dataset_base_class", false], [2, "module-encoding_information.datasets.hml_dataset", false], [2, "module-encoding_information.datasets.mnist_dataset", false], [3, "module-encoding_information.models", false], [3, "module-encoding_information.models.conditional_entropy_models", false], [3, "module-encoding_information.models.gaussian_process", false], [3, "module-encoding_information.models.model_base_class", false], [3, "module-encoding_information.models.pixel_cnn", false]], "name (encoding_information.models.pixel_cnn.gatedmaskedconv attribute)": [[3, "encoding_information.models.pixel_cnn.GatedMaskedConv.name", false]], "name (encoding_information.models.pixel_cnn.horizontalstackconvolution attribute)": [[3, "encoding_information.models.pixel_cnn.HorizontalStackConvolution.name", false]], "name (encoding_information.models.pixel_cnn.maskedconvolution attribute)": [[3, "encoding_information.models.pixel_cnn.MaskedConvolution.name", false]], "name (encoding_information.models.pixel_cnn.preprocesslayer attribute)": [[3, "encoding_information.models.pixel_cnn.PreprocessLayer.name", false]], "name (encoding_information.models.pixel_cnn.verticalstackconvolution attribute)": [[3, "encoding_information.models.pixel_cnn.VerticalStackConvolution.name", false]], "nearest_neighbors_entropy_estimate() (in module encoding_information.information_estimation)": [[1, "encoding_information.information_estimation.nearest_neighbors_entropy_estimate", false]], "nll_per_pixel_from_cov_mat() (in module encoding_information.models.gaussian_process)": [[3, "encoding_information.models.gaussian_process.nll_per_pixel_from_cov_mat", false]], "normalize_image_stack() (in module encoding_information.image_utils)": [[1, "encoding_information.image_utils.normalize_image_stack", false]], "overlayedhistograms (class in encoding_information.plot_utils)": [[1, "encoding_information.plot_utils.OverlayedHistograms", false]], "parent (encoding_information.models.pixel_cnn.gatedmaskedconv attribute)": [[3, "encoding_information.models.pixel_cnn.GatedMaskedConv.parent", false]], "parent (encoding_information.models.pixel_cnn.horizontalstackconvolution attribute)": [[3, "encoding_information.models.pixel_cnn.HorizontalStackConvolution.parent", false]], "parent (encoding_information.models.pixel_cnn.maskedconvolution attribute)": [[3, "encoding_information.models.pixel_cnn.MaskedConvolution.parent", false]], "parent (encoding_information.models.pixel_cnn.preprocesslayer attribute)": [[3, "encoding_information.models.pixel_cnn.PreprocessLayer.parent", false]], "parent (encoding_information.models.pixel_cnn.verticalstackconvolution attribute)": [[3, "encoding_information.models.pixel_cnn.VerticalStackConvolution.parent", false]], "pixelcnn (class in encoding_information.models.pixel_cnn)": [[3, "encoding_information.models.pixel_cnn.PixelCNN", false]], "plot() (encoding_information.plot_utils.overlayedhistograms method)": [[1, "encoding_information.plot_utils.OverlayedHistograms.plot", false]], "plot_eigenvalues() (in module encoding_information.plot_utils)": [[1, "encoding_information.plot_utils.plot_eigenvalues", false]], "plot_intensity_coord_histogram() (in module encoding_information.plot_utils)": [[1, "encoding_information.plot_utils.plot_intensity_coord_histogram", false]], "plot_optimization_loss_history() (in module encoding_information.plot_utils)": [[1, "encoding_information.plot_utils.plot_optimization_loss_history", false]], "plugin_estimate_stationary_cov_mat() (in module encoding_information.models.gaussian_process)": [[3, "encoding_information.models.gaussian_process.plugin_estimate_stationary_cov_mat", false]], "poissonnoisemodel (class in encoding_information.models.conditional_entropy_models)": [[3, "encoding_information.models.conditional_entropy_models.PoissonNoiseModel", false]], "preprocesslayer (class in encoding_information.models.pixel_cnn)": [[3, "encoding_information.models.pixel_cnn.PreprocessLayer", false]], "read_images_and_sample_intensities() (in module encoding_information.datasets.bsccm_utils)": [[2, "encoding_information.datasets.bsccm_utils.read_images_and_sample_intensities", false]], "run_bootstrap() (in module encoding_information.information_estimation)": [[1, "encoding_information.information_estimation.run_bootstrap", false]], "scope (encoding_information.models.pixel_cnn.gatedmaskedconv attribute)": [[3, "encoding_information.models.pixel_cnn.GatedMaskedConv.scope", false]], "scope (encoding_information.models.pixel_cnn.horizontalstackconvolution attribute)": [[3, "encoding_information.models.pixel_cnn.HorizontalStackConvolution.scope", false]], "scope (encoding_information.models.pixel_cnn.maskedconvolution attribute)": [[3, "encoding_information.models.pixel_cnn.MaskedConvolution.scope", false]], "scope (encoding_information.models.pixel_cnn.preprocesslayer attribute)": [[3, "encoding_information.models.pixel_cnn.PreprocessLayer.scope", false]], "scope (encoding_information.models.pixel_cnn.verticalstackconvolution attribute)": [[3, "encoding_information.models.pixel_cnn.VerticalStackConvolution.scope", false]], "setup() (encoding_information.models.pixel_cnn.horizontalstackconvolution method)": [[3, "encoding_information.models.pixel_cnn.HorizontalStackConvolution.setup", false]], "setup() (encoding_information.models.pixel_cnn.verticalstackconvolution method)": [[3, "encoding_information.models.pixel_cnn.VerticalStackConvolution.setup", false]], "stationarygaussianprocess (class in encoding_information.models.gaussian_process)": [[3, "encoding_information.models.gaussian_process.StationaryGaussianProcess", false]], "std (encoding_information.models.pixel_cnn.preprocesslayer attribute)": [[3, "encoding_information.models.pixel_cnn.PreprocessLayer.std", false]], "train_model() (in module encoding_information.models.model_base_class)": [[3, "encoding_information.models.model_base_class.train_model", false]], "try_to_make_doubly_toeplitz_and_positive_definite() (in module encoding_information.models.gaussian_process)": [[3, "encoding_information.models.gaussian_process.try_to_make_doubly_toeplitz_and_positive_definite", false]], "verticalstackconvolution (class in encoding_information.models.pixel_cnn)": [[3, "encoding_information.models.pixel_cnn.VerticalStackConvolution", false]]}, "objects": {"": [[1, 0, 0, "-", "encoding_information"]], "encoding_information": [[2, 0, 0, "-", "datasets"], [1, 0, 0, "-", "error_bars"], [1, 0, 0, "-", "gpu_utils"], [1, 0, 0, "-", "image_utils"], [1, 0, 0, "-", "information_estimation"], [3, 0, 0, "-", "models"], [1, 0, 0, "-", "plot_utils"]], "encoding_information.datasets": [[2, 0, 0, "-", "bsccm_utils"], [2, 0, 0, "-", "cfa_dataset"], [2, 0, 0, "-", "dataset_base_class"], [2, 0, 0, "-", "hml_dataset"], [2, 0, 0, "-", "mnist_dataset"]], "encoding_information.datasets.bsccm_utils": [[2, 1, 1, "", "BSCCMDataset"], [2, 3, 1, "", "add_shot_noise_to_experimenal_data"], [2, 3, 1, "", "compute_photon_rescale_fraction"], [2, 3, 1, "", "generate_synthetic_multi_led_images"], [2, 3, 1, "", "get_bsccm_image"], [2, 3, 1, "", "get_bsccm_image_marker_generator"], [2, 3, 1, "", "get_display_channel_names"], [2, 3, 1, "", "get_targets_and_display_range"], [2, 3, 1, "", "load_bsccm_images"], [2, 3, 1, "", "load_data_from_config"], [2, 3, 1, "", "load_image_with_synthetic_shot_noise"], [2, 3, 1, "", "read_images_and_sample_intensities"]], "encoding_information.datasets.bsccm_utils.BSCCMDataset": [[2, 2, 1, "", "get_measurements"], [2, 2, 1, "", "get_shape"]], "encoding_information.datasets.cfa_dataset": [[2, 1, 1, "", "ColorFilterArrayDataset"]], "encoding_information.datasets.cfa_dataset.ColorFilterArrayDataset": [[2, 2, 1, "", "get_measurements"], [2, 2, 1, "", "get_shape"]], "encoding_information.datasets.dataset_base_class": [[2, 1, 1, "", "MeasurementDatasetBase"]], "encoding_information.datasets.dataset_base_class.MeasurementDatasetBase": [[2, 2, 1, "", "get_measurements"], [2, 2, 1, "", "get_shape"]], "encoding_information.datasets.hml_dataset": [[2, 1, 1, "", "HyperspectralMetalensDataset"]], "encoding_information.datasets.hml_dataset.HyperspectralMetalensDataset": [[2, 2, 1, "", "get_measurements"], [2, 2, 1, "", "get_shape"]], "encoding_information.datasets.mnist_dataset": [[2, 1, 1, "", "MNISTDataset"]], "encoding_information.datasets.mnist_dataset.MNISTDataset": [[2, 2, 1, "", "get_measurements"], [2, 2, 1, "", "get_shape"]], "encoding_information.gpu_utils": [[1, 3, 1, "", "limit_gpu_memory_growth"]], "encoding_information.image_utils": [[1, 3, 1, "", "add_noise"], [1, 3, 1, "", "extract_patches"], [1, 3, 1, "", "normalize_image_stack"]], "encoding_information.information_estimation": [[1, 3, 1, "", "analytic_multivariate_gaussian_entropy"], [1, 3, 1, "", "estimate_conditional_entropy"], [1, 3, 1, "", "estimate_information"], [1, 3, 1, "", "estimate_mutual_information"], [1, 3, 1, "", "estimate_task_specific_mutual_information"], [1, 3, 1, "", "nearest_neighbors_entropy_estimate"], [1, 3, 1, "", "run_bootstrap"]], "encoding_information.models": [[3, 0, 0, "-", "conditional_entropy_models"], [3, 0, 0, "-", "gaussian_process"], [3, 0, 0, "-", "model_base_class"], [3, 0, 0, "-", "pixel_cnn"]], "encoding_information.models.conditional_entropy_models": [[3, 1, 1, "", "AnalyticGaussianNoiseModel"], [3, 1, 1, "", "PoissonNoiseModel"]], "encoding_information.models.conditional_entropy_models.AnalyticGaussianNoiseModel": [[3, 2, 1, "", "estimate_conditional_entropy"]], "encoding_information.models.conditional_entropy_models.PoissonNoiseModel": [[3, 2, 1, "", "estimate_conditional_entropy"]], "encoding_information.models.gaussian_process": [[3, 1, 1, "", "FullGaussianProcess"], [3, 1, 1, "", "StationaryGaussianProcess"], [3, 3, 1, "", "average_diagonals_to_make_doubly_toeplitz"], [3, 3, 1, "", "estimate_full_cov_mat"], [3, 3, 1, "", "gaussian_likelihood"], [3, 3, 1, "", "generate_multivariate_gaussian_samples"], [3, 3, 1, "", "generate_stationary_gaussian_process_samples"], [3, 3, 1, "", "make_positive_definite"], [3, 3, 1, "", "match_to_generator_data"], [3, 3, 1, "", "nll_per_pixel_from_cov_mat"], [3, 3, 1, "", "plugin_estimate_stationary_cov_mat"], [3, 3, 1, "", "try_to_make_doubly_toeplitz_and_positive_definite"]], "encoding_information.models.gaussian_process.FullGaussianProcess": [[3, 2, 1, "", "compute_negative_log_likelihood"], [3, 2, 1, "", "fit"], [3, 2, 1, "", "generate_samples"]], "encoding_information.models.gaussian_process.StationaryGaussianProcess": [[3, 2, 1, "", "compute_analytic_entropy"], [3, 2, 1, "", "compute_negative_log_likelihood"], [3, 2, 1, "", "fit"], [3, 2, 1, "", "generate_samples"], [3, 2, 1, "", "get_cov_mat"], [3, 2, 1, "", "get_mean_vec"]], "encoding_information.models.model_base_class": [[3, 1, 1, "", "MeasurementModel"], [3, 1, 1, "", "MeasurementNoiseModel"], [3, 1, 1, "", "MeasurementType"], [3, 3, 1, "", "make_dataset_generators"], [3, 3, 1, "", "train_model"]], "encoding_information.models.model_base_class.MeasurementModel": [[3, 2, 1, "", "compute_negative_log_likelihood"], [3, 2, 1, "", "fit"], [3, 2, 1, "", "generate_samples"]], "encoding_information.models.model_base_class.MeasurementNoiseModel": [[3, 2, 1, "", "estimate_conditional_entropy"]], "encoding_information.models.model_base_class.MeasurementType": [[3, 4, 1, "", "D"], [3, 4, 1, "", "HW"], [3, 4, 1, "", "HWC"]], "encoding_information.models.pixel_cnn": [[3, 1, 1, "", "GatedMaskedConv"], [3, 1, 1, "", "HorizontalStackConvolution"], [3, 1, 1, "", "MaskedConvolution"], [3, 1, 1, "", "PixelCNN"], [3, 1, 1, "", "PreprocessLayer"], [3, 1, 1, "", "VerticalStackConvolution"]], "encoding_information.models.pixel_cnn.GatedMaskedConv": [[3, 4, 1, "", "condition_vector_size"], [3, 4, 1, "", "dilation"], [3, 4, 1, "", "id"], [3, 4, 1, "", "name"], [3, 4, 1, "", "parent"], [3, 4, 1, "", "scope"]], "encoding_information.models.pixel_cnn.HorizontalStackConvolution": [[3, 4, 1, "", "c_out"], [3, 4, 1, "", "dilation"], [3, 4, 1, "", "kernel_size"], [3, 4, 1, "", "mask_center"], [3, 4, 1, "", "name"], [3, 4, 1, "", "parent"], [3, 4, 1, "", "scope"], [3, 2, 1, "", "setup"]], "encoding_information.models.pixel_cnn.MaskedConvolution": [[3, 4, 1, "", "c_out"], [3, 4, 1, "", "dilation"], [3, 4, 1, "", "mask"], [3, 4, 1, "", "name"], [3, 4, 1, "", "parent"], [3, 4, 1, "", "scope"]], "encoding_information.models.pixel_cnn.PixelCNN": [[3, 2, 1, "", "compute_negative_log_likelihood"], [3, 2, 1, "", "fit"], [3, 2, 1, "", "generate_samples"]], "encoding_information.models.pixel_cnn.PreprocessLayer": [[3, 4, 1, "", "mean"], [3, 4, 1, "", "name"], [3, 4, 1, "", "parent"], [3, 4, 1, "", "scope"], [3, 4, 1, "", "std"]], "encoding_information.models.pixel_cnn.VerticalStackConvolution": [[3, 4, 1, "", "c_out"], [3, 4, 1, "", "dilation"], [3, 4, 1, "", "kernel_size"], [3, 4, 1, "", "mask_center"], [3, 4, 1, "", "name"], [3, 4, 1, "", "parent"], [3, 4, 1, "", "scope"], [3, 2, 1, "", "setup"]], "encoding_information.plot_utils": [[1, 1, 1, "", "OverlayedHistograms"], [1, 3, 1, "", "add_multiple_colorbars"], [1, 3, 1, "", "plot_eigenvalues"], [1, 3, 1, "", "plot_intensity_coord_histogram"], [1, 3, 1, "", "plot_optimization_loss_history"]], "encoding_information.plot_utils.OverlayedHistograms": [[1, 2, 1, "", "add"], [1, 2, 1, "", "generate_bins"], [1, 2, 1, "", "get_hist_counts"], [1, 2, 1, "", "plot"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute"}, "terms": {"": [2, 3], "0": [1, 2, 3], "001": [1, 3], "01": 3, "1": [1, 2, 3], "10": 3, "100": [1, 3], "1000": [1, 2], "12": 3, "123": 3, "1234": 1, "123456": 2, "128": 2, "15": 3, "16": [1, 2], "2": [1, 2, 3], "200": [1, 3], "2000": 2, "2008": 2, "21": 2, "24": 2, "256": 1, "2d": 3, "3": [1, 3], "4": 2, "40": [2, 3], "5": 1, "50": 1, "568": 2, "60": 3, "64": 3, "9": [1, 3], "90": 1, "A": 1, "For": 1, "If": [1, 2, 3], "In": [1, 2], "It": [1, 3], "Not": 2, "The": [1, 2, 3], "__call__": 3, "__init__": 3, "__setattr__": 3, "_sentinel": 3, "abc": [2, 3], "abstract": [2, 3], "access": [2, 3], "account": [1, 2, 3], "across": 1, "actual": 2, "ad": [1, 2, 3], "adapt": 3, "add": [1, 2, 4], "add_gaussian_nois": 3, "add_gaussian_training_nois": 1, "add_multiple_colorbar": [1, 4], "add_nois": [1, 4], "add_shot_noise_to_experimenal_data": [1, 2], "add_uniform_nois": 3, "addit": [1, 2, 3], "al": 2, "all": [1, 2, 3], "along": [2, 3], "also": [1, 2, 3], "an": [1, 2, 3], "analyt": [1, 3], "analytic_marginal_entropi": 1, "analytic_multivariate_gaussian_entropi": [1, 4], "analyticgaussiannoisemodel": [1, 3], "andrew": 2, "ani": [2, 3], "anoth": 3, "antibodi": 2, "appli": [2, 3], "approxim": 1, "ar": [1, 2, 3], "arg": [1, 2, 3], "argument": 1, "aros": 1, "arrai": [1, 2, 3], "assign": 3, "assum": [1, 2], "attribut": [2, 3], "autoregressive_image_model": 3, "avail": 2, "averag": [1, 2, 3], "average_diagonals_to_make_doubly_toeplitz": [1, 3], "avoid": 1, "ax": [1, 2], "b": 2, "back": 3, "background": 2, "bar": 1, "base": [1, 2, 3], "batch": [1, 2, 3], "batch_siz": [1, 3], "bayer": 2, "bayesian": 2, "becaus": 2, "been": 2, "befor": [2, 3], "being": [1, 3], "below": 3, "between": 1, "bia": 2, "big": 2, "bin": 1, "bit": 1, "black_background": 1, "blake": 2, "blob": 3, "block": 3, "bool": [1, 2, 3], "bootstrap": 1, "bottom": 1, "bound": [1, 3], "brian": 2, "bsccm": 2, "bsccm_coher": 2, "bsccm_util": [0, 1, 4], "bsccmdataset": [1, 2], "c": [1, 2], "c_out": [1, 3], "ca": 2, "call": 3, "callabl": 3, "camera": 2, "can": [1, 2, 3], "captur": 2, "carsten": 2, "case": [1, 3], "caus": 3, "cd123": 2, "cd14": 2, "cd16": 2, "cd19": 2, "cd3": 2, "cd45": 2, "cd56": 2, "cell": 2, "center": [1, 2], "center_crop": 2, "cfa_dataset": [0, 1, 4], "channel": [1, 2, 3], "channel_or_channel": 2, "chosen": 1, "class": [1, 2, 3], "clean": [1, 3], "clean_imag": 1, "clip": 1, "cmap": 1, "collect": 2, "color": [1, 2], "colorfilterarraydataset": [1, 2], "colour": 2, "com": 3, "compact": 3, "comparison": 3, "complic": 1, "compon": 1, "comput": [1, 2, 3], "compute_analytic_entropi": [1, 3], "compute_negative_log_likelihood": [1, 3], "compute_photon_rescale_fract": [1, 2], "condit": [1, 3], "condition_vector": [1, 3], "condition_vector_s": [1, 3], "conditional_entropy_model": [0, 1, 4], "conditioning_vec": 3, "conf_int": 1, "confer": 2, "confid": 1, "confidence_interv": 1, "config": 2, "constanc": 2, "constant": 1, "construct": 3, "contain": 2, "content": 4, "context": 2, "continu": 3, "contrast": 2, "control": 3, "conv": 3, "conv1": 3, "conveni": 1, "convert": [2, 3], "convert_units_to_photon": 2, "coordin": 2, "corner": 1, "correct": 2, "count": 2, "cov_mat": 3, "cov_matrix": 1, "covari": [1, 3], "crop": [1, 2], "crop_loc": 1, "d": [1, 3], "data": [1, 2, 3], "data_dir": 2, "data_se": [2, 3], "dataset": [0, 1, 3, 4], "dataset_base_class": [0, 1, 4], "de": 2, "decai": 1, "def": 3, "default": [1, 2], "defin": 3, "definit": 3, "densiti": 3, "depend": [1, 2], "deprec": 1, "descent": 1, "desir": [1, 2], "detail": 2, "diagon": 3, "dictionari": 1, "differ": [1, 2, 3], "differenti": [1, 3], "dilat": [1, 3], "dimension": [1, 3], "directli": 3, "directori": 2, "discret": 3, "displai": 2, "distribut": [1, 3], "divid": 2, "do_lr_decai": [1, 3], "doe": 3, "doesn": 1, "don": 2, "done": 2, "dont": 3, "doubli": 3, "dpc_left": 2, "dr": 2, "dsitribut": 1, "due": [1, 2], "dure": [1, 3], "e": [1, 2], "each": [1, 2, 3], "earli": 3, "easi": 3, "edg": [1, 2], "edge_crop": 2, "eig_vec": 3, "eigenvalu": [1, 3], "eigenvalue_floor": [1, 3], "eigval": 3, "either": [1, 3], "empir": 3, "empty_slid": 2, "en": 3, "encoding_inform": 0, "energi": 1, "ensur": [1, 3], "ensure_nonneg": 3, "ensure_posit": 1, "entropi": [1, 3], "entropy_model": 1, "enum": 3, "enumer": 3, "epoch": [1, 3], "equal": [1, 3], "error_bar": [0, 4], "estim": [1, 3], "estimate_conditional_entropi": [1, 3, 4], "estimate_conditional_from_model_sampl": 1, "estimate_full_cov_mat": [1, 3], "estimate_inform": [1, 4], "estimate_mutual_inform": [1, 4], "estimate_task_specific_mutual_inform": [1, 4], "estimation_fn": 1, "et": 2, "etc": [1, 2], "evalu": 3, "exce": 2, "expect": 2, "express": 1, "extract": 1, "extract_patch": [1, 4], "fact": [1, 2, 3], "factor": 2, "fals": [1, 2, 3], "fast": 3, "fewer": 2, "field": 2, "file": 2, "filter": 2, "filter_matrix": 2, "finit": 1, "first": 3, "fit": [1, 3], "flatten": 1, "flax": 3, "float": [1, 2, 3], "follow": [1, 3], "fraction": [1, 2], "from": [1, 2, 3], "full": 1, "full_gaussian": 1, "fullgaussian": 1, "fullgaussianprocess": [1, 3], "function": [1, 2, 3], "funt": 2, "further": 2, "g": [1, 2], "gatedmaskedconv": [1, 3], "gaussian": [1, 2, 3], "gaussian_likelihood": [1, 3], "gaussian_noise_sigma": 1, "gaussian_process": [0, 1, 4], "gaussian_sigma": 1, "gaussiannoisemodel": 1, "gehler": 2, "gener": [1, 2, 3], "generate_bin": [1, 4], "generate_multivariate_gaussian_sampl": [1, 3], "generate_sampl": [1, 3], "generate_stationary_gaussian_process_sampl": [1, 3], "generate_synthetic_multi_led_imag": [1, 2], "get": [2, 3], "get_bsccm_imag": [1, 2], "get_bsccm_image_marker_gener": [1, 2], "get_cov_mat": [1, 3], "get_display_channel_nam": [1, 2], "get_hist_count": [1, 4], "get_mean_vec": [1, 3], "get_measur": [1, 2], "get_shap": [1, 2], "get_targets_and_display_rang": [1, 2], "github": 3, "give": 3, "given": [1, 2, 3], "gpu_util": [0, 4], "gradient": 1, "gradient_clip": [1, 3], "grayscal": 2, "grid": 1, "h": [1, 2, 3], "h5": 2, "h5_dir": 2, "h5_file": 2, "had": 2, "handl": 3, "happen": 3, "hardmaru": 3, "have": [1, 2], "hazineh": 2, "height": 2, "help": 1, "here": 3, "hidden": 1, "histogram": [1, 2], "hla": 2, "hml_dataset": [0, 1, 4], "horizontalstackconvolut": [1, 3], "hot": 1, "how": [1, 2], "html": [2, 3], "http": [2, 3], "hw": [1, 3], "hwc": [1, 3], "hxw": 1, "hyperspectralmetalensdataset": [1, 2], "i": [1, 2, 3], "id": [1, 3], "ieee": 2, "ignor": 2, "iid": 1, "imag": [1, 2, 3], "image_distribution_model": 3, "image_shap": 2, "image_stack": 2, "image_util": [0, 4], "immedi": 3, "implement": 3, "import": [2, 3], "improv": 1, "includ": 1, "independ": 3, "index": 2, "indic": 2, "inform": 1, "information_estim": [0, 4], "init": 3, "init_and_output": 3, "initi": 3, "input": 1, "insid": 3, "instanc": 3, "instead": [1, 3], "int": [1, 2, 3], "intens": 2, "intensities_1": 1, "intensities_2": 1, "interfac": 3, "interv": 1, "invok": 3, "io": 3, "ipynb": 3, "issu": 1, "iter": [1, 3], "iteself": 1, "jax": [1, 3], "jnp": 3, "k": 1, "keep": 2, "kei": [1, 3], "kernel_s": [1, 3], "kl": 1, "know": 2, "kwarg": [1, 2, 3], "kyb": 2, "label": 1, "larg": 1, "larger": 3, "latest": 3, "lazi": 3, "lazili": 3, "learn": [1, 3], "learning_r": [1, 3], "least": 1, "led": 2, "led_indic": 2, "left": 1, "less": 3, "level": 2, "like": [2, 3], "likelihood": [1, 3], "lilong": 2, "limit": 2, "limit_gpu_memory_growth": [1, 4], "line": 3, "linear": 3, "linen": 3, "list": [1, 2, 3], "load": 2, "load_bsccm_imag": [1, 2], "load_data_from_config": [1, 2], "load_image_with_synthetic_shot_nois": [1, 2], "locat": 1, "log": [1, 2, 3], "log_likelihood": 3, "logarithm": 1, "logx": 1, "loop": 3, "loss": [1, 3], "lower": [1, 2], "lowest": 2, "mai": 2, "make": [1, 3], "make_dataset_gener": [1, 3], "make_positive_definit": [1, 3], "mani": [1, 2], "marker": 2, "mask": [1, 3], "mask_cent": [1, 3], "maskedconvolut": [1, 3], "master": 3, "match_to_generator_data": [1, 3], "matric": 1, "matrix": [1, 2, 3], "max": 1, "max_epoch": [1, 3], "maximum": [1, 3], "mdn_jax_tutori": 3, "mean": [1, 2, 3], "mean_valu": 2, "mean_vec": 3, "measur": [1, 2, 3], "measurement_dtyp": 3, "measurement_model": 1, "measurement_typ": 3, "measurementdatasetbas": [1, 2], "measurementmodel": [1, 3], "measurementnoisemodel": [1, 3], "measurementtyp": [1, 3], "median": [1, 2], "median_filt": 2, "memori": 1, "metadata": 2, "metalen": 2, "method": 3, "minka": 2, "mixtur": [1, 3], "mixture_density_networks_jax": 3, "mnist": 2, "mnist_dataset": [0, 1, 4], "mnistdataset": [1, 2], "modal": 2, "model": [0, 1, 4], "model_base_class": [0, 1, 4], "model_se": 3, "modul": [0, 4], "momentum": [1, 3], "more": 2, "mpg": 2, "much": 3, "multi": 1, "multipl": 1, "multivari": [1, 3], "mutual": 1, "mymodul": 3, "n": [1, 3], "n_dimens": 1, "n_imag": 2, "n_sampl": 1, "name": [1, 2, 3], "nat": 1, "natur": 2, "ndarrai": [1, 2, 3], "nearest": 1, "nearest_neighbors_entropy_estim": [1, 4], "neccesarili": 3, "need": 2, "neg": [1, 3], "neighbor": 1, "new": 3, "nll": 3, "nll_per_pixel_from_cov_mat": [1, 3], "nn": 3, "nois": [1, 2, 3], "noise_model": 1, "noise_se": 2, "noiseless": [1, 2], "noisemodel": 1, "noisi": [1, 2], "noisy_imag": 1, "noisy_measur": 2, "non": 1, "none": [1, 2, 3], "nonneg": [1, 3], "normalize_image_stack": [1, 4], "notebook": 3, "now": 3, "np": 2, "num": 1, "num_bin": 1, "num_bootstrap": 1, "num_bootstrap_sampl": 1, "num_epoch": 3, "num_hidden_channel": [1, 3], "num_imag": 2, "num_masked_pixel": 1, "num_measur": 2, "num_mixture_compon": [1, 3], "num_patch": 1, "num_pixel": 3, "num_sampl": 3, "num_val_sampl": [1, 3], "number": [1, 2, 3], "numer": 1, "numpi": 2, "nx": 1, "nxhxw": 1, "nxk": 1, "nxwxh": 3, "object": [1, 3], "offset": 2, "old": 2, "onc": 3, "one": [1, 2, 3], "ones": 3, "open": 2, "optim": 1, "option": [1, 2, 3], "origin": [1, 2], "other": 3, "otherwis": [1, 2], "out": 1, "output": [1, 3], "over": 3, "overlap": 1, "overlayedhistogram": [1, 4], "p": 1, "packag": [0, 4], "pad": 1, "paramet": 2, "parent": [1, 3], "pass": 1, "patch": [1, 2, 3], "patch_siz": [1, 2, 3], "path": 2, "patienc": [1, 3], "pattern": 2, "peopl": 2, "per": [1, 2, 3], "percent_samples_for_valid": 3, "percentag": [1, 3], "percentil": 1, "perform": 1, "peter": 2, "pgehler": 2, "photon": 2, "photon_fract": 2, "pipelin": 3, "pixel": [1, 2, 3], "pixel_cnn": [0, 1, 4], "pixelcnn": [1, 3], "plot": [1, 4], "plot_center_coord": 1, "plot_eigenvalu": [1, 4], "plot_intensity_coord_histogram": [1, 4], "plot_optimization_loss_histori": [1, 4], "plot_util": [0, 4], "plugin_estimate_stationary_cov_mat": [1, 3], "point": [1, 2], "poisson": [1, 2, 3], "poissonnoisemodel": [1, 3], "posit": 3, "possibli": 3, "precondition_gradi": 3, "predict": 2, "prefer": 3, "prefer_iterative_sampl": 3, "prepar": 2, "preprocesslay": [1, 3], "presenc": 2, "present": 2, "previou": 3, "print": [1, 3], "prngkei": [1, 3], "probabilist": [1, 3], "probabilisticimagemodel": 3, "probabl": 1, "proce": 3, "procedur": 1, "proceed": 2, "process": [1, 2, 3], "produc": 2, "progress": [1, 3], "provid": [1, 2], "quantiti": 1, "r": 2, "rais": 2, "random": [1, 2, 3], "randomli": 1, "rate": [1, 3], "rather": 1, "raw": 2, "re": 2, "read": 2, "read_images_and_sample_intens": [1, 2], "readthedoc": 3, "realiz": 1, "realli": 1, "reason": 2, "recognit": 2, "reduc": 2, "refer": 2, "refin": 1, "regular": [1, 2], "rel": 3, "repres": [1, 3], "reproduc": 1, "request": 2, "resampl": 1, "rescal": [1, 2], "respect": 1, "result": [1, 2], "return": 2, "return_entropy_model": 1, "return_median": 1, "revisit": 2, "rgb": 2, "rid": 3, "rother": 2, "run": 1, "run_bootstrap": [1, 4], "safe": 3, "same": [1, 2, 3], "sampl": [1, 2, 3], "sample_s": 3, "sample_shap": 3, "scale": 2, "scope": [1, 3], "see": [1, 2, 3], "seed": [1, 2, 3], "select": [1, 2], "self": 3, "set": [1, 2, 3], "setup": [1, 3], "sfu": 2, "shape": [1, 2, 3], "sharp": 2, "shi": 2, "shi_gehl": 2, "shot": [1, 2], "should": [1, 2], "show": 1, "shuffl": [2, 3], "shuffle_se": 2, "side": 2, "sigma": [1, 3], "sigma_min": 3, "similar": 3, "simul": 2, "sinc": 3, "singl": [1, 3], "single_mark": 2, "size": [1, 2, 3], "slide": 2, "slower": 3, "so": [2, 3], "societi": 2, "some": 2, "sourc": 2, "specif": 2, "specifi": 2, "speed": 1, "split": 1, "squar": [1, 3], "stabl": 1, "stack": [1, 2, 3], "state": 3, "stationari": [1, 3], "stationarygaussianprocess": [1, 3], "std": [1, 3], "step": [1, 3], "steps_per_epoch": [1, 3], "stop": 3, "str": [1, 2, 3], "strategi": 1, "submodul": [0, 4], "subpackag": [0, 4], "subtract": 1, "support": 2, "suppress_warn": 3, "sure": 3, "synthet": [1, 2], "synthetic_nois": 2, "t": [1, 2, 3], "take": [1, 2, 3], "target": 2, "tensorflow": 3, "test": [1, 3], "test_set": 1, "test_set_fract": 1, "than": [1, 2, 3], "thei": 2, "them": [1, 3], "themselv": 1, "thi": [1, 2, 3], "three": 3, "tile": [1, 2], "tile_s": 2, "time": 1, "tobi": 2, "toeplitz": 3, "tom": 2, "top": 1, "total": 2, "total_patch": 2, "train": [1, 3], "train_imag": 3, "train_model": [1, 3], "train_set": 1, "train_step": 3, "true": [1, 2, 3], "try_to_make_doubly_toeplitz_and_positive_definit": [1, 3], "tupl": [1, 2, 3], "tutorial12": 3, "tutorial_notebook": 3, "two": [1, 2], "type": [1, 2, 3], "uncertainti": 1, "under": 3, "uniform": 1, "uniform_random": 1, "union": 3, "unit": 1, "unsupport": 2, "upper": 1, "upper_bound_confidence_interv": 1, "us": [1, 2, 3], "use_correction_factor": 2, "use_iterative_optim": 1, "use_two_spectrum_unmix": 2, "usi": 1, "uvadlc": 3, "val_loss_histori": [1, 3], "valid": [1, 3], "valu": [1, 2, 3], "valueerror": 2, "variou": [1, 2], "vector": [1, 3], "vector_length": 2, "verbos": [1, 2, 3], "version": 2, "verticalstackconvolut": [1, 3], "vision": 2, "w": [1, 2, 3], "wa": 3, "wai": 1, "wait": [1, 3], "we": [2, 3], "weight": 3, "were": 2, "when": 3, "where": [1, 2], "whether": [1, 2, 3], "which": [1, 2, 3], "white": 2, "width": 2, "won": 3, "work": 3, "would": 2, "wrap": 3, "wrapper": 2, "www": 2, "x": [1, 2, 3], "x1": 2, "x2_offset": 2, "y": [1, 3], "yet": 3, "yield": 2, "you": 2, "zarr_path": 2, "zero": 3, "zorder": 1}, "titles": ["Imaging System Design with Information Estimation", "encoding_information package", "encoding_information.datasets package", "encoding_information.models package", "encoding_information"], "titleterms": {"bsccm_util": 2, "cfa_dataset": 2, "conditional_entropy_model": 3, "content": [0, 1, 2, 3], "dataset": 2, "dataset_base_class": 2, "design": 0, "encoding_inform": [1, 2, 3, 4], "error_bar": 1, "estim": 0, "gaussian_process": 3, "gpu_util": 1, "hml_dataset": 2, "imag": 0, "image_util": 1, "inform": 0, "information_estim": 1, "mnist_dataset": 2, "model": 3, "model_base_class": 3, "modul": [1, 2, 3], "packag": [1, 2, 3], "paramet": [1, 3], "pixel_cnn": 3, "plot_util": 1, "return": [1, 3], "submodul": [1, 2, 3], "subpackag": 1, "system": 0}})